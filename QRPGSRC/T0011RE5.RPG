      **************************************************************
      * PROGRAM         T0011RE5
      * APPLICATION     UIM/RPG SAMPLE
      * PURPOSE         This is the general panel exit program for
      *                 UIM/RPG sample application.
      * NOTES
      * This program is called by UIM whenever enter, or a function
      * key is pressed on any panel with USREXIT='CALL ABUEXIT'.
      * This program does all data file updating and writing.  The
      * reason file writing should be done in the exit program
      * is so that if a problem occurs (like duplicate key) then
      * the panel can be redisplayed with a message.  This is
      * done by sending CPF6A02 to UIM.
      *
      * Exit programs must be "reentrant" in the sense that they
      * may be called repeatedly even after they abort.  This means
      * that the exit program must NOT depend on the initialization
      * of values in its data structures.  The reason the exit
      * program aborts is that when it detects an error it sends an
      * *ESCAPE message to UIM.  This program uses IN60 to detect
      * reentrancy.
      *   Open the datafile for read/write.
     FT0011DD5IF  E           K        DISK                      A
      *-------------------------------------------------------------
      *   Array used to check zip code
     E                    ZAR         5  1
      *-------------------------------------------------------------
      *   Include the UIM constants, and declare the VARRCD
      *
     I/COPY QUSRTOOL/QATTRPG,T0011RI6
     I/COPY QUSRTOOL/QATTRPG,T0011RI7
      *-------------------------------------------------------------
      *   List of digits, used to check zip code
     I              '0123456789'          C         DIGITS
      *-------------------------------------------------------------
      *   Declare entry parameters (Binary not allowed in *ENTRY)
      *
     I            DS
     I                                    B   1   40TYPCAL
     I                                        1   4 TYPCA§
     I                                    B   5   80OPTNUM
     I                                        5   8 OPTNU§
     I                                    B   9  120FNCQUA
     I                                        9  12 FNCQU§
     I                                    B  13  160FNCKEY
     I                                       13  16 FNCKE§
      *-------------------------------------------------------------
      *   Declare parameters to the QMHSNDPM system API
      *
     IMESS        DS
     I I            0                     B   1   40MSGLEN
     I I            '*INFO'                   5  14 MSGTYP
     I I            '*'                      15  24 PGMQUE
     I I            1                     B  25  280PGMSTK
     IMSGF        DS
     I I            'T0011MG5'                1  10 MSGFN
     I I            '*LIBL'                  11  20 MSGFL
      *-------------------------------------------------------------
      *  Declare and copy the entry parameters.
      *  Some acrobatics required since B parms not allowed on *ENTR
      *
     C           *ENTRY    PLIST
     C                     PARM           TYPCA£  4
     C                     PARM           APPHN£  8
     C                     PARM           PNLNA£ 10
     C                     PARM           FNCKE£  4
     C                     PARM           FNCQU£  4
     C                     PARM           OPTNU£  4
     C                     MOVE TYPCA£    TYPCA§
     C                     MOVE APPHN£    APPHND
     C                     MOVE PNLNA£    PNLNAM
     C                     MOVE FNCKE£    FNCKE§
     C                     MOVE FNCQU£    FNCQU§
     C                     MOVE OPTNU£    OPTNU§
      **************************************************************
      *   Check the parameters, this routine only does call=4.
      **************************************************************
     C           TYPCAL    COMP 4                    H1H1  Not equal
     C   H1                RETRN
      *-------------------------------------------------------------
      *   Setup name and sizeof of varrcd and reset the data structu
      *   if necessary.  in60 is set by ERREND.
     C                     MOVEL'DATAVAR' VARNAM    P
     C                     MOVE VLEN      VARLEN
     C   60                RESETMSGF
     C   60                RESETMESS
      *-------------------------------------------------------------
      *   Test the list option and invoke the appropriate subroutine
      *
     C                     SELEC
     C           FNCKEY    WHEQ ENTKEY                     Enter key
     C           PNLNAM    ANDEQ'ADDABU'                   Add panel
     C                     EXSR ADDEXT
     C           FNCKEY    WHEQ ENTKEY                     Enter key
     C           PNLNAM    ANDEQ'CHGABU'                   Chg panel
     C                     EXSR CHKZIP
     C                     ENDSL
     C                     MOVE *ON       *INLR
     C                     RETRN
      *-------------------------------------------------------------
      *   The following statement is never run, but it avoids some
      *   compiler errors and runtime error CPF4030.
     C           NAME      CHAINT0011DD5             50
      *-------------------------------------------------------------
      *   Exit routine to process add record
      *
     C           ADDEXT    BEGSR
     C                     EXSR CHKZIP
     C                     WRITEDD5REC                 50
     C   50                MOVEL'USR0102' MSGID     P      Error
     C   50                EXSR ERREND
     C                     ENDSR
      *-------------------------------------------------------------
      *   Exit routine to check the zip code, it does a GETV first
      *
     C           CHKZIP    BEGSR
     C                     CALL 'QUIGETV' GETV
     C                     DO   5         X       10
     C           ZAR,X     SCAN DIGITS                   50
     C  N50                LEAVE
     C                     ENDDO
     C  N50                MOVEL'USR0107' MSGID     P      Error
     C  N50                EXSR ERREND
     C                     ENDSR
      *-------------------------------------------------------------
      *   This subroutine sends an error message and a status messag
      *   Note:  when a *status message is sent, the program ends
      *          immediately.
      *
     C           ERREND    BEGSR
     C                     CALL 'QMHSNDPM'SNDPM
     C                     MOVEL'CPF6A02' MSGID     P
     C                     MOVEL'*STATUS' MSGTYP    P
     C                     MOVEL'QCPFMSG' MSGFN     P
     C                     MOVE *ON       *IN60
     C                     CALL 'QMHSNDPM'SNDPM
     C                     RETRN                           Never her
     C                     ENDSR
      *-------------------------------------------------------------
     C           SNDPM     PLIST
     C                     PARM           MSGID
     C                     PARM           MSGF
     C                     PARM           MSGDTA
     C                     PARM           MSGLEN
     C                     PARM           MSGTYP
     C                     PARM           PGMQUE
     C                     PARM           PGMSTK
     C                     PARM           MSGKEY
     C                     PARM           ERRCOD
      *-------------------------------------------------------------
     I/COPY QUSRTOOL/QATTRPG,T0011RI5
